@model QuanLyNhaHang_DATN.Models.MonAn
@using QuanLyNhaHang_DATN.Models
<form id="editForm" method="post" enctype="multipart/form-data" data-ajax="true">
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.Id)

    <div class="modal-header">
        <h5 class="modal-title">Chỉnh sửa món ăn</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
    </div>
    <div class="modal-body">
        <div class="form-group mb-3">
            <label class="form-label">Tên món ăn <span class="text-danger">*</span></label>
            @Html.TextBoxFor(m => m.TenMonAn, new { @class = "form-control", required = "required" })
            @Html.ValidationMessageFor(m => m.TenMonAn, "", new { @class = "text-danger" })
        </div>

        <div class="form-group mb-3">
            <label class="form-label">Giá <span class="text-danger">*</span></label>
            @Html.TextBoxFor(m => m.Gia, new { @class = "form-control", type = "number", step = "1000", required = "required" })
            @Html.ValidationMessageFor(m => m.Gia, "", new { @class = "text-danger" })
        </div>

        <div class="form-group mb-3">
            <label class="form-label">Hình ảnh <span class="text-danger">*</span></label>
            <input type="file" name="imageFile" id="imageFile" class="form-control" accept="image/*" />
            @Html.ValidationMessage("imageFile", "", new { @class = "text-danger" })
            @if (!string.IsNullOrEmpty(Model.HinhAnh))
            {
                <img id="imagePreview" src="/uploads/@Model.HinhAnh" alt="@Model.TenMonAn" style="width: 100px; height: 100px; object-fit: cover; margin-top: 10px;" />
            }
            else
            {
                <img id="imagePreview" src="" alt="Chưa có hình ảnh" style="display: none; width: 100px; height: 100px; object-fit: cover; margin-top: 10px;" />
            }
        </div>

        <div class="form-group mb-3">
            <label class="form-label">Danh mục <span class="text-danger">*</span></label>
            @Html.DropDownListFor(m => m.DanhMucId, new SelectList(ViewBag.DanhMucs, "Id", "TenDanhMuc", Model.DanhMucId), "-- Chọn danh mục --", new { @class = "form-control", required = "required" })
            @Html.ValidationMessageFor(m => m.DanhMucId, "", new { @class = "text-danger" })
        </div>
        <div class="form-group mb-3">
            <label class="form-label">Trạng thái <span class="text-danger">*</span></label>
            @Html.DropDownListFor(m => m.TrangThai, (List<SelectListItem>)ViewBag.TrangThaiList, "-- Chọn trạng thái --", new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.TrangThai, "", new { @class = "text-danger" })
        </div>
        

        <div class="form-group mb-3">
            <label class="form-label">Mô tả</label>
            @Html.TextAreaFor(m => m.MoTa, new { @class = "form-control", rows = "3" })
           @*  @Html.ValidationMessageFor(m => m.MoTa, "", new { @class = "text-danger" }) *@
        </div>
    </div>
    <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
        <button type="submit" class="btn btn-primary">Cập nhật</button>
    </div>
</form>
<script>
    // Xử lý preview hình ảnh khi người dùng chọn tệp mới
    document.getElementById('imageFile').addEventListener('change', function (event) {
        const file = event.target.files[0];
        const imagePreview = document.getElementById('imagePreview');

        if (file) {
            // Đọc tệp hình ảnh và hiển thị preview
            const reader = new FileReader();
            reader.onload = function (e) {
                imagePreview.src = e.target.result;
                imagePreview.style.display = 'block'; // Hiển thị thẻ img nếu trước đó bị ẩn
            };
            reader.readAsDataURL(file);
        } else {
            // Nếu không chọn tệp, quay lại hình ảnh mặc định (nếu có)
            imagePreview.src = '@(!string.IsNullOrEmpty(Model.HinhAnh) ? $"/uploads/{Model.HinhAnh}" : "")';
            imagePreview.style.display = '@(string.IsNullOrEmpty(Model.HinhAnh) ? "none" : "block")';
        }
    });
</script>