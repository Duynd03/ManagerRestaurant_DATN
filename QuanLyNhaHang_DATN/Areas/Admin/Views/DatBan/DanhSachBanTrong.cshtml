@model IEnumerable<QuanLyNhaHang_DATN.Models.Ban>
@{
    ViewData["Title"] = "Danh sách Bàn Trống";
    Layout = "~/Areas/Admin/Views/Shared/_layoutAdmin.cshtml";
    var khuVucBans = ViewBag.KhuVucBanList as List<QuanLyNhaHang_DATN.Models.KhuVucBan>;
    string searchTenBan = ViewBag.SearchTenBan as string;
    int? selectedKhuVucBanId = ViewBag.SelectedKhuVucBanId;
    int? datBanId = ViewBag.DatBanId;
    int requiredBans = ViewBag.RequiredBans != null ? (int)ViewBag.RequiredBans : 1;
}

<div class="col-md-12">
    <div class="card">
        <div class="card-header">
            <div class="d-flex align-items-center">
                <h4 class="card-title me-auto">Danh sách Bàn Trống</h4>
                <button id="btnSearch" class="btn btn-secondary btn-round me-2" onclick="showSearchForm()">
                    <i class="fa fa-search"></i> Tìm kiếm
                </button>
            </div>
        </div>

        @if (TempData["Error"] != null)
        {
            <div class="alert alert-danger" role="alert">
                @TempData["Error"]
            </div>
        }

        @if (datBanId.HasValue)
        {
            var datBan = ViewBag.DatBanInfo as string ?? "";
            <div class="alert alert-info" role="alert">
                @datBan (Cần @requiredBans bàn)
            </div>
        }

        <!-- Form tìm kiếm -->
        <div id="searchFormContainer" class="card p-3 mb-3" style="display: none;">
            <form id="searchForm" onsubmit="searchData(); return false;">
                <div class="mb-3">
                    <label for="tenBan" class="form-label">Tên Bàn</label>
                    <input type="text" name="tenBan" class="form-control" value="@searchTenBan" placeholder="Nhập tên Bàn" />
                </div>
                <div class="mb-3">
                    <label for="khuVucBanId" class="form-label">Khu vực</label>
                    <select name="khuVucBanId" class="form-select">
                        <option value="">-- Tất cả --</option>
                        @foreach (var dm in khuVucBans)
                        {
                            <option value="@dm.Id" @(selectedKhuVucBanId == dm.Id ? "selected" : "")>@dm.TenKhuVuc</option>
                        }
                    </select>
                </div>
                <div class="d-flex gap-2">
                    <button type="button" class="btn btn-primary" onclick="searchData()">
                        <i class="bi bi-search"></i> Tìm kiếm
                    </button>
                    <button type="button" class="btn btn-secondary" onclick="hideSearchForm()">
                        <i class="bi bi-x-circle"></i> Đóng
                    </button>
                </div>
            </form>
        </div>

        <div class="card-body">
            <!-- Thông báo lỗi từ AJAX -->
            <div id="errorMessage" class="alert alert-danger" style="display: none;"></div>

            <!-- Modal hiển thị lịch sử đặt bàn -->
            <div class="modal fade" id="scheduleModal" tabindex="-1" aria-labelledby="scheduleModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="scheduleModalLabel">Lịch đặt bàn</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body" id="scheduleModalBody">
                            <!-- Nội dung lịch sử đặt bàn sẽ được cập nhật bằng AJAX -->
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Danh sách bàn trống -->
            <div class="table-responsive">
                @if (datBanId.HasValue)
                {
                    <form id="xepBanForm">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="datBanId" value="@datBanId" />

                        <div class="alert alert-info">
                            @if (requiredBans == 1)
                            {
                                <span>Vui lòng chọn 1 bàn</span>
                            }
                            else
                            {
                                <span>Cần chọn ít nhất @requiredBans bàn</span>
                            }
                        </div>

                        <table id="banTable" class="table table-striped table-hover">
                            <thead>
                                <tr>
                                    <th width="50px">
                                        @if (requiredBans > 1)
                                        {
                                            <input type="checkbox" id="selectAll" onchange="toggleSelectAll()" />
                                        }
                                    </th>
                                    <th>ID</th>
                                    <th>Tên bàn</th>
                                    <th>Khu vực</th>
                                    <th>Trạng thái</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>

                        <div id="submitMessage" class="text-danger mt-2" style="display: none;">
                            Vui lòng chọn ít nhất @requiredBans bàn.
                        </div>
                        <button type="button" id="submitBtn" class="btn btn-primary" disabled onclick="submitXepBan()">
                            <i class="fas fa-chair"></i> Xếp bàn
                        </button>
                    </form>
                }
                else
                {
                    <table id="banTable" class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Tên bàn</th>
                                <th>Khu vực</th>
                                <th>Trạng thái</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                }
                <div id="paginationContainer" class="mt-3"></div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Khai báo biến và hàm toàn cục
        window.currentDatBanId = @(datBanId.HasValue ? datBanId.Value : 0);
        window.currentRequiredBans = @requiredBans;

        window.loadData = function (pageIndex = 1, pageSize = 5) {
            let tenBan = $("input[name='tenBan']").val() || '';
            let khuVucBanId = $("select[name='khuVucBanId']").val() || '';
            let datBanId = currentDatBanId;

            $.ajax({
                url: "/Admin/DatBan/GetPagedBanTrong",
                type: "GET",
                data: {
                    pageIndex: pageIndex,
                    pageSize: pageSize,
                    tenBan: tenBan,
                    khuVucBanId: khuVucBanId,
                    datBanId: datBanId
                },
                success: function (response) {
                    $("#errorMessage").hide();
                    if (response.success) {
                        updateTable(response.items, currentDatBanId, response.requiredBans);
                        updatePagination(response.totalCount, response.pageIndex, response.pageSize);
                    } else {
                        showError(response.message || "Không thể tải dữ liệu.");
                    }
                },
                error: function (xhr) {
                    showError("Lỗi khi tải dữ liệu: " + xhr.statusText);
                }
            });
        };

        window.updateTable = function (items, datBanId, requiredBans) {
            let html = '';
            if (items.length === 0) {
                html = `<tr><td colspan="${datBanId ? 5 : 4}" class="text-center">Không có bàn trống nào.</td></tr>`;
            } else {
                items.forEach(function (item) {
                    const trangThai = item.trangThaiValue === 0 ?
                        '<span class="badge bg-success">Trống</span>' :
                        '<span class="badge bg-danger">Đã sử dụng</span>';

                    const isAvailable = datBanId && item.scheduledInfo ? item.scheduledInfo.isAvailable : true;
                    const checkboxDisabled = datBanId && !isAvailable ? 'disabled' : '';

                    if (datBanId) {
                        html += `<tr>
                                            <td>
                                                <input type="checkbox" name="banIds" value="${item.id}"
                                                       class="ban-checkbox"
                                                       data-max="${requiredBans}"
                                                       ${checkboxDisabled}
                                                       onchange="updateSubmitButton()" />
                                            </td>
                                            <td>${item.id}</td>
                                            <td class="ten-ban-clickable" data-ban-id="${item.id}">${item.tenBan || ''}</td>
                                            <td>${item.tenKhuVucBan || 'Không có Khu vực'}</td>
                                            <td>${trangThai}</td>
                                        </tr>`;
                    } else {
                        html += `<tr>
                                            <td>${item.id}</td>
                                            <td class="ten-ban-clickable" data-ban-id="${item.id}">${item.tenBan || ''}</td>
                                            <td>${item.tenKhuVucBan || 'Không có Khu vực'}</td>
                                            <td>${trangThai}</td>
                                        </tr>`;
                    }
                });
            }
            $("#banTable tbody").html(html);

            // Gắn sự kiện nhấp vào ô Tên Bàn có class "ten-ban-clickable"
            $("#banTable tbody").off("click", ".ten-ban-clickable").on("click", ".ten-ban-clickable", function () {
                const banId = $(this).data("ban-id");
                showScheduleDetails(banId);
            });

            // Cập nhật lại các sự kiện checkbox
            $(".ban-checkbox").off("change").on("change", function () {
                const maxAllowed = parseInt($(this).data("max"));
                const checkedCount = $(".ban-checkbox:checked").length;

                if (checkedCount > maxAllowed) {
                    $(this).prop("checked", false);
                    $("#submitMessage").text(`Chỉ được chọn tối đa ${maxAllowed} bàn`).show();
                    setTimeout(() => {
                        $("#submitMessage").text(`Vui lòng chọn ít nhất ${maxAllowed} bàn`)
                            .toggle(checkedCount < maxAllowed);
                    }, 2000);
                }
                updateSubmitButton();
            });
        };

        window.updatePagination = function (totalCount, pageIndex, pageSize) {
            let totalPages = Math.ceil(totalCount / pageSize);
            let paginationHtml = '<nav><ul class="pagination">';

            paginationHtml += `<li class="page-item ${pageIndex <= 1 ? 'disabled' : ''}">
                                        <a class="page-link" href="#" onclick="loadData(${pageIndex - 1}, ${pageSize}); return false;">Trước</a>
                                    </li>`;

            for (let i = 1; i <= totalPages; i++) {
                paginationHtml += `<li class="page-item ${i === pageIndex ? 'active' : ''}">
                                            <a class="page-link" href="#" onclick="loadData(${i}, ${pageSize}); return false;">${i}</a>
                                        </li>`;
            }

            paginationHtml += `<li class="page-item ${pageIndex >= totalPages ? 'disabled' : ''}">
                                        <a class="page-link" href="#" onclick="loadData(${pageIndex + 1}, ${pageSize}); return false;">Sau</a>
                                    </li>`;

            paginationHtml += '</ul></nav>';
            $("#paginationContainer").html(paginationHtml);
        };

        window.showError = function (message) {
            $("#errorMessage").text(message).show();
            $("#banTable tbody").html(`<tr><td colspan="${currentDatBanId ? 5 : 4}" class="text-center">${message}</td></tr>`);
        };

        window.showScheduleDetails = function (banId) {
            $.ajax({
                url: "/Admin/DatBan/GetBanScheduleDetails",
                type: "GET",
                data: { banId: banId, datBanId: currentDatBanId },
                success: function (response) {
                    if (response.success) {
                        let html = response.schedules.length > 0 ?
                            response.schedules.map(s => `
                                                <div class="mb-2 ${s.isConflict ? 'text-danger' : ''}">
                                                    <strong>Đơn ID:</strong> ${s.datBanId}<br>
                                                    <strong>Khách hàng:</strong> ${s.tenKhachHang}<br>
                                                    <strong>Thời gian:</strong> ${s.thoiGianBatDau}<br>
                                                    <strong>Số người:</strong> ${s.soLuongNguoi}<br>
                                                    <strong>Nhân viên xử lý:</strong> ${s.tenNhanVien}<br>
                                                    <strong>Ghép bàn:</strong> ${s.ghiepTuDong ? 'Có' : 'Không'}
                                                </div>
                                            `).join('') :
                            '<p>Không có đơn đặt bàn trong tương lai.</p>';
                        $("#scheduleModalBody").html(html);
                        new bootstrap.Modal(document.getElementById('scheduleModal')).show();
                    } else {
                        $("#scheduleModalBody").html(`<p class="text-danger">${response.message}</p>`);
                        new bootstrap.Modal(document.getElementById('scheduleModal')).show();
                    }
                },
                error: function (xhr) {
                    $("#scheduleModalBody").html('<p class="text-danger">Lỗi khi tải dữ liệu.</p>');
                    new bootstrap.Modal(document.getElementById('scheduleModal')).show();
                }
            });
        };

        $(document).ready(function () {
            // Tải dữ liệu ban đầu
            loadData(1, 5);

            // Xử lý chọn tất cả checkbox
            window.toggleSelectAll = function () {
                let isChecked = $("#selectAll").prop("checked");
                let maxAllowed = currentRequiredBans;
                let checkboxes = $(".ban-checkbox");

                checkboxes.prop("checked", false);
                if (isChecked) {
                    checkboxes.slice(0, maxAllowed).prop("checked", true);
                }
                updateSubmitButton();
            }

            // Cập nhật trạng thái nút submit
            window.updateSubmitButton = function () {
                const required = currentRequiredBans;
                const checkedCount = $(".ban-checkbox:checked").length;
                const isValid = checkedCount >= required;

                $("#submitBtn").prop("disabled", !isValid);
                $("#submitMessage").toggle(!isValid && checkedCount > 0);
            }

            // Gửi AJAX để xếp bàn
            window.submitXepBan = function () {
                const required = currentRequiredBans;
                const checkedCount = $(".ban-checkbox:checked").length;
                if (checkedCount < required) {
                    $("#submitMessage").text(`Vui lòng chọn đủ ${required} bàn.`).show();
                    return;
                }

                const datBanId = $("#xepBanForm input[name='datBanId']").val();
                const banIds = $(".ban-checkbox:checked").map(function () {
                    return $(this).val();
                }).get();
                const token = $("#xepBanForm input[name='__RequestVerificationToken']").val();

                $.ajax({
                    url: "/Admin/DatBan/XepBan",
                    type: "POST",
                    data: {
                        datBanId: datBanId,
                        banIds: banIds,
                        __RequestVerificationToken: token
                    },
                    success: function (response) {
                        if (response.success) {
                            alert("Xếp bàn thành công!");
                            window.location.href = "/Admin/DatBan/LichDatBan";
                        } else {
                            $("#submitMessage").text(response.message || "Có lỗi khi xếp bàn.").show();
                        }
                    },
                    error: function (xhr, status, error) {
                        $("#submitMessage").text("Lỗi khi gửi yêu cầu: " + error).show();
                    }
                });
            }

            // Tìm kiếm
            window.searchData = function () {
                loadData(1, 5);
                hideSearchForm();
            }

            // Hiển thị/Ẩn form tìm kiếm
            window.showSearchForm = function () {
                $("#searchFormContainer").show();
            }

            window.hideSearchForm = function () {
                $("#searchFormContainer").hide();
            }
        });
    </script>
}