@model QuanLyNhaHang_DATN.Models.DatBan

@{
    ViewData["Title"] = "Gọi món";
    Layout = "~/Areas/Admin/Views/Shared/_layoutAdmin.cshtml";
}

<div class="container mt-5">
    <div class="card border-info shadow-lg" style="border-width: 2px !important;">
        <div class="card-header text-white d-flex align-items-center justify-content-between p-3">
            <h4 class="card-title mb-0">Lịch xếp bàn</h4>
        </div>
        <div class="card-body">
            <!-- Danh sách danh mục và giỏ hàng -->
            <div class="row">
                <!-- Danh sách danh mục -->
                <div class="col-md-4">
                    <div class="card border-primary h-100">
                        <div class="card-header bg-primary text-white">
                            <h3 class="mb-0">Danh sách danh mục</h3>
                        </div>
                        <div class="card-body p-0">
                            <div class="list-group list-group-flush">
                                @if (ViewBag.DanhMucList != null)
                                {
                                    foreach (var danhMuc in ViewBag.DanhMucList)
                                    {
                                        <button class="list-group-item list-group-item-action border-bottom py-3" onclick="loadMonAn(@danhMuc.Id)">@danhMuc.TenDanhMuc</button>
                                    }
                                }
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Danh sách món ăn với phân trang cố định -->
                <div class="col-md-8">
                    <div class="card border-primary h-100">
                        <div class="card-header bg-primary text-white">
                            <h3 class="mb-0">Danh sách món ăn</h3>
                        </div>
                        <div class="card-body d-flex flex-column">
                            <div class="table-responsive flex-grow-1">
                                <table class="table table-bordered table-hover">
                                    <thead class="table-primary">
                                        <tr>
                                            <th>Tên món ăn</th>
                                            <th>Giá</th>
                                            <th>Thêm</th>
                                        </tr>
                                    </thead>
                                    <tbody id="monAnTableBody">
                                        <!-- Món ăn sẽ được load động -->
                                    </tbody>
                                </table>
                            </div>
                            <!-- Phân trang cố định -->
                            <div id="paginationContainer" class="pagination-container mt-3"></div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Danh sách món gọi -->
            <div class="mt-4">
                <h4 class="mb-3">Danh sách món gọi</h4>
                <div class="card border-primary mb-3">
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-bordered table-hover">
                                <thead class="table-primary">
                                    <tr>
                                        <th>Tên món ăn</th>
                                        <th>Số lượng</th>
                                        <th>Thành tiền</th>
                                    </tr>
                                </thead>
                                <tbody id="cartItems">
                                    <!-- Món sẽ được cập nhật động -->
                                </tbody>
                                <tfoot id="cartTotal">
                                    <tr>
                                        <td colspan="2" class="text-end"><strong>Tổng cộng:</strong></td>
                                        <td class="text-success fw-bold" style="font-size: 1.2em;">0 VNĐ</td>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Lịch sử gọi món -->
            <div class="mt-4">
                <h4 class="mb-3">Lịch sử gọi món</h4>
                @if (ViewBag.GoiMonByLan != null)
                {
                    var goiMonByLan = ViewBag.GoiMonByLan as Dictionary<int, List<QuanLyNhaHang_DATN.ViewModels.GoiMonViewModel>>;
                    var maxLanGoiMon = ViewBag.MaxLanGoiMon as int? ?? 0;
                    var tongTienTatCaLan = 0m;
                    for (int lan = 1; lan <= maxLanGoiMon; lan++)
                    {
                        if (goiMonByLan.ContainsKey(lan) && goiMonByLan[lan].Any())
                        {
                            var tongTienLan = goiMonByLan[lan].Sum(item => item.Gia * item.SoLuong);
                            tongTienTatCaLan += tongTienLan;
                            <div class="card border-primary mb-3">
                                <div class="card-header bg-primary text-white">
                                    <h5 class="mb-0">Lần gọi @lan</h5>
                                </div>
                                <div class="card-body">
                                    <div class="table-responsive">
                                        <table class="table table-bordered table-hover">
                                            <thead class="table-primary">
                                                <tr>
                                                    <th>Tên món ăn</th>
                                                    <th class="text-center">Số lượng</th>
                                                    <th>Thành tiền</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var item in goiMonByLan[lan])
                                                {
                                                    <tr>
                                                        <td>@item.TenMonAn</td>
                                                        <td class="text-center">@item.SoLuong</td>
                                                        <td>@((item.Gia * item.SoLuong).ToString("N0")) VNĐ</td>
                                                    </tr>
                                                }
                                            </tbody>
                                            <tfoot>
                                                <tr>
                                                    <td colspan="2" class="text-end"><strong>Tổng cộng:</strong></td>
                                                    <td class="text-success fw-bold">@tongTienLan.ToString("N0") VNĐ</td>
                                                </tr>
                                            </tfoot>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                    <div class="card border-success mt-3 text-end">
                        <div class="card-body">
                            <h5 class="text-success"><strong>Tổng cộng: @tongTienTatCaLan.ToString("N0") VNĐ</strong></h5>
                        </div>
                    </div>
                }
            </div>

            <!-- Nút điều khiển -->
            <div class="mt-3">
                <div class="d-flex justify-content-end gap-2">
                    <button class="btn btn-danger shadow-sm" onclick="clearCart()">
                        <i class="fas fa-times-circle me-1"></i> Hủy
                    </button>
                    <button class="btn btn-info shadow-sm" id="btnSaveGoiMon" onclick="saveGoiMon()">
                        <i class="fas fa-save me-1"></i> Lưu lại
                    </button>
                    <button class="btn btn-success shadow-sm" onclick="createHoaDon()">
                        <i class="fas fa-receipt me-1"></i> Xuất hóa đơn
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let selectedMonAnList = [];
        let currentDatBanId = @Model.Id;
        let currentLanGoiMon = @ViewBag.CurrentLanGoiMon;

        // Load danh sách món của lần gọi mới nhất khi trang load
        $(document).ready(function () {
            const goiMonList = JSON.parse('@Html.Raw(System.Text.Json.JsonSerializer.Serialize(ViewBag.GoiMonByLan != null && ViewBag.MaxLanGoiMon != null && ViewBag.GoiMonByLan.ContainsKey(ViewBag.MaxLanGoiMon) ? ViewBag.GoiMonByLan[ViewBag.MaxLanGoiMon] : new List<QuanLyNhaHang_DATN.ViewModels.GoiMonViewModel>()))');
            selectedMonAnList = goiMonList.map(item => ({
                MonAnId: item.MonAnId,
                TenMonAn: item.TenMonAn,
                Gia: item.Gia,
                SoLuong: item.SoLuong,
                LanGoiMon: @ViewBag.MaxLanGoiMon || 1
            })) || [];
            updateCartDisplay();
        });

        // Load món ăn theo danh mục với phân trang
        window.loadMonAn = function (danhMucId, pageIndex = 1, pageSize = 5) {
            $.ajax({
                url: "/Admin/GoiMon/GetMonAnByDanhMuc",
                type: "GET",
                data: { danhMucId: danhMucId, pageIndex: pageIndex, pageSize: pageSize },
                success: function (response) {
                    if (response.success) {
                        let tbody = $("#monAnTableBody");
                        tbody.empty();
                        if (response.items.length === 0) {
                            tbody.append(`<tr><td colspan="3" class="text-center text-muted">Không có món ăn nào</td></tr>`);
                        } else {
                            response.items.forEach(item => {
                                tbody.append(`
                                                    <tr>
                                                        <td>${item.tenMonAn}</td>
                                                        <td>${item.gia.toLocaleString()} VNĐ</td>
                                                        <td><button class="btn btn-success btn-sm" onclick="addToCart(${item.id}, '${item.tenMonAn}', ${item.gia}, currentLanGoiMon)">+</button></td>
                                                    </tr>
                                                `);
                            });
                        }
                        updatePagination(danhMucId, response.totalCount, response.pageIndex, response.pageSize);
                    } else {
                        alert("Không tìm thấy món ăn.");
                    }
                },
                error: function (xhr) {
                    alert("Lỗi khi tải món ăn: " + xhr.statusText);
                }
            });
        };

        // Thêm món vào giỏ hàng
        window.addToCart = function (id, tenMonAn, gia, lan) {
            let existingItem = selectedMonAnList.find(item => item.MonAnId === id && item.LanGoiMon === lan);
            if (existingItem) {
                existingItem.SoLuong += 1;
            } else {
                selectedMonAnList.push({ MonAnId: id, TenMonAn: tenMonAn, Gia: gia, SoLuong: 1, LanGoiMon: lan });
            }
            updateCartDisplay();
        };

        // Xóa món khỏi giỏ hàng
        window.removeFromCart = function (id, lan) {
            let item = selectedMonAnList.find(item => item.MonAnId === id && item.LanGoiMon === lan);
            if (item) {
                item.SoLuong -= 1;
                if (item.SoLuong <= 0) {
                    selectedMonAnList = selectedMonAnList.filter(item => item.MonAnId !== id || item.LanGoiMon !== lan);
                }
            }
            updateCartDisplay();
        };

        // Cập nhật giao diện giỏ hàng
        window.updateCartDisplay = function () {
            let tbody = $("#cartItems");
            tbody.empty();

            let total = 0;
            let hasItems = false;
            selectedMonAnList.forEach(item => {
                if (item.LanGoiMon === currentLanGoiMon) {
                    const thanhTien = item.Gia * item.SoLuong;
                    total += thanhTien;
                    hasItems = true;
                    tbody.append(`
                                        <tr>
                                            <td>${item.TenMonAn}</td>
                                            <td>
                                                <button class="btn btn-sm btn-danger" onclick="removeFromCart(${item.MonAnId}, ${item.LanGoiMon})">-</button>
                                                ${item.SoLuong}
                                                <button class="btn btn-sm btn-success" onclick="addToCart(${item.MonAnId}, '${item.TenMonAn}', ${item.Gia}, ${item.LanGoiMon})">+</button>
                                            </td>
                                            <td>${thanhTien.toLocaleString()} VNĐ</td>
                                        </tr>
                                    `);
                }
            });

            let tfoot = $("#cartTotal");
            if (hasItems) {
                tfoot.show();
                $("#cartTotal td:last-child").text(total.toLocaleString() + " VNĐ");
            } else {
                tfoot.hide();
            }
        };

        // Lưu danh sách gọi món
        window.saveGoiMon = function () {
            const itemsToSave = selectedMonAnList.filter(item => item.LanGoiMon === currentLanGoiMon);
            if (itemsToSave.length === 0) {
                alert("Vui lòng chọn ít nhất một món ăn!");
                return;
            }

            var formData = new FormData();
            formData.append("datBanId", currentDatBanId);
            itemsToSave.forEach((item, index) => {
                formData.append(`goiMonViewModels[${index}].MonAnId`, item.MonAnId);
                formData.append(`goiMonViewModels[${index}].SoLuong`, item.SoLuong);
                formData.append(`goiMonViewModels[${index}].Gia`, item.Gia);
                formData.append(`goiMonViewModels[${index}].TenMonAn`, item.TenMonAn);
            });

            $.ajax({
                url: "/Admin/GoiMon/SaveGoiMon",
                type: "POST",
                data: formData,
                processData: false,
                contentType: false,
                beforeSend: function (xhr) {
                    xhr.setRequestHeader("RequestVerificationToken", $('input[name="__RequestVerificationToken"]').val());
                },
                success: function (response) {
                    if (response.success) {
                        alert(response.message);
                        window.location.reload();
                    } else {
                        alert(response.message || "Có lỗi khi lưu gọi món.");
                    }
                },
                error: function (xhr) {
                    alert("Lỗi khi gửi yêu cầu: " + xhr.statusText);
                }
            });
        };

        // Xóa danh sách gọi món chưa lưu
        window.clearCart = function () {
            if (currentDatBanId <= 0) {
                alert("Đặt bàn không hợp lệ!");
                return;
            }

            if (confirm("Bạn có chắc chắn muốn hủy các món chưa lưu?")) {
                selectedMonAnList = selectedMonAnList.filter(item => item.LanGoiMon !== currentLanGoiMon);
                updateCartDisplay();
                alert("Đã xóa các món chưa lưu của lần hiện tại!");
            }
        };

        // Xuất hóa đơn
        window.createHoaDon = function () {
            if (currentDatBanId <= 0) {
                alert("Đặt bàn không hợp lệ! Vui lòng kiểm tra lại thông tin đặt bàn.");
                return;
            }

            if (confirm("Bạn có chắc chắn muốn tạo hóa đơn cho đặt bàn này? Sau khi tạo, vui lòng kiểm tra tại danh sách hóa đơn.")) {
                $.ajax({
                    url: "/Admin/HoaDon/CreateHoaDon",
                    type: "POST",
                    data: { datBanId: currentDatBanId },
                    beforeSend: function (xhr) {
                        xhr.setRequestHeader("RequestVerificationToken", $('input[name="__RequestVerificationToken"]').val());
                    },
                    success: function (response) {
                        if (response.success) {
                            alert(response.message);
                            window.location.href = "/Admin/HoaDon/HoaDonHienThoi";
                        } else {
                            alert(response.message || "Lỗi không xác định khi tạo hóa đơn!");
                        }
                    },
                    error: function (xhr) {
                        alert("Lỗi khi gửi yêu cầu đến server: " + xhr.statusText);
                    }
                });
            }
        };

        // Hàm cập nhật phân trang cố định
        function updatePagination(danhMucId, totalCount, pageIndex, pageSize) {
            let totalPages = Math.ceil(totalCount / pageSize);
            let paginationHtml = '<nav><ul class="pagination justify-content-center">';

            if (pageIndex > 1) {
                paginationHtml += `<li class="page-item"><a class="page-link" href="#" onclick="loadMonAn(${danhMucId}, ${pageIndex - 1}, ${pageSize}); return false;">Trước</a></li>`;
            } else {
                paginationHtml += '<li class="page-item disabled"><span class="page-link">Trước</span></li>';
            }

            for (let i = 1; i <= totalPages; i++) {
                if (i === pageIndex) {
                    paginationHtml += `<li class="page-item active"><span class="page-link">${i}</span></li>`;
                } else {
                    paginationHtml += `<li class="page-item"><a class="page-link" href="#" onclick="loadMonAn(${danhMucId}, ${i}, ${pageSize}); return false;">${i}</a></li>`;
                }
            }

            if (pageIndex < totalPages) {
                paginationHtml += `<li class="page-item"><a class="page-link" href="#" onclick="loadMonAn(${danhMucId}, ${pageIndex + 1}, ${pageSize}); return false;">Sau</a></li>`;
            } else {
                paginationHtml += '<li class="page-item disabled"><span class="page-link">Sau</span></li>';
            }

            paginationHtml += '</ul></nav>';
            $("#paginationContainer").html(paginationHtml);
        }
    </script>
}